{"version":3,"sources":["components/Login/Login.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/common/FormsContent/FormContent.module.css","components/Header/Header.module.css","components/Header/Clocks.module.css","components/Users/User.module.css","components/Profile/Profile.module.css","components/Sidebar/Sidebar.module.css","reportWebVitals.js","api/api.js","utils/ObjectHelper.js","redux/UsersReducer.js","redux/ProfileReducer.js","redux/DialogsReducer.js","redux/AuthReducer.js","redux/AppReducer.js","redux/ReduxStore.js","assets/images/header_pict_p_1.jpg","components/Header/Clocks.jsx","components/Header/Header.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/News/News.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/common/FormsContent/FormsContent.js","utils/validators/validators.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","assets/images/default_avatar.jpg","components/Users/User.jsx","components/Users/Users.jsx","assets/Spinner200px.svg","components/common/Preloader/Preloader.jsx","redux/UsersSelectors.js","components/Users/UsersContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/head.jpg","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Sidebar/Sidebar.jsx","components/Sidebar/SidebarContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.js","App.js","index.js","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","response","data","id","post","delete","authAPI","email","password","rememberMe","profileAPI","userID","status","put","updateObjectInArray","items","key","objPropName","newObjProps","map","u","TOGGLE_SUB","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_PAGE_SIZE","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","toggleSub","isFollow","type","userId","toggleFollowingProgress","isFetching","toggleIsFetching","initialState","users","totalUsersCount","followingProgress","UsersReducer","state","action","followed","curP","totalC","pageS","filter","DELETE_POST","ADD_POST","SET_USER_PROFILE","SET_STATUS","setUserProfile","profile","setStatus","postsData","message","likes","ProfileReducer","newPost","text","length","stateCopy","p","ADD_MESSAGE","CHANGE_ID","messagesData","messages","sender","newMessageText","newMessageId","dialogsData","name","DialogsReducer","m","newMess","push","SET_USER_DATA","DELETE_USER_DATA","setAuthUserData","authUser","dispatch","a","resultCode","logoutUser","login","isAuth","AuthReducer","SET_INITIALIZED","initializedSet","AppReducer","reducersPack","combineReducers","dialogsPage","profilePage","usersPage","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Clocks","useState","Date","toLocaleTimeString","time","setTime","useEffect","timer","setInterval","clearInterval","className","s","clocks","Header","header","src","header_pict","Music","props","Settings","News","console","log","Message","sendBy","user","friend","sendByBorder","userBorder","friendBorder","sendByBorderAlign","userBorderAlign","friendBorderAlign","DialogItem","path","dialog","onClick","changeId","to","activeClassName","active","FormControl","input","meta","hasError","touched","error","formControl","children","Textarea","restProps","Input","requiredField","value","maxLengthCreator","maxLength","Messages","userMessages","ReduxAddMessageForm","reduxForm","onSubmit","handleSubmit","addMessage","Field","component","validate","Dialogs","dialogsElements","page","Router","render","dialogs","dialogsItems","line1","line2","formData","newMessageBody","withAuthRedirect","Component","RedirectComponent","this","React","connect","addMessageActionCreate","User","followingStatusChange","avatar","photos","small","disabled","some","Users","defaultCurrent","defaultPageSize","total","onShowSizeChange","current","onPageSizeChange","onChange","onPageChange","Preloader","spinner","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingProgress","UsersContainer","createSelector","setCurrentPage","setPageSize","totalCount","Post","item","postImage","postMessage","like","likeButton","likeText","likesCount","MyPosts","memo","postsElements","myPostsContent","ReduxAddPostForm","addPost","newPostBody","posts","MyPostsContainer","addPostActionCreate","ProfileStatusWithHooks","editMode","setEditMode","onDoubleClick","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","allContacts","contacts","profileInfo","header_picture","headPict","fullN","fullName","ava","large","aboutMe","lookingForAJob","lookingForAJobDescription","Profile","ProfileContainer","match","params","userid","authUserId","getProfile","getStatus","prevProps","setState","withRouter","Sidebar","nav","itemMarg","logout","SidebarContainer","sendLogout","ReduxLoginForm","placeholder","formSummaryError","checkbox","Login","sendLogin","LoginContainer","loginUser","err","stopSubmit","_error","App","initializeApp","basename","process","DialogsContainer","promise","Promise","all","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8aa56107.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Login_checkbox__3UFrU\",\"formSummaryError\":\"Login_formSummaryError__3cy0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormContent_formControl__1bjEU\",\"error\":\"FormContent_error__21PO0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clocks\":\"Clocks_clocks__10YiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__3Rkdj\",\"selectedPage\":\"User_selectedPage__NeROx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__i8Lo5\",\"item\":\"Sidebar_item__3zPF1\",\"active\":\"Sidebar_active__37KeR\",\"itemMarg\":\"Sidebar_itemMarg__3tkI_\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\n\n\nconst instance = axios.create({\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"b6ba6bc3-2474-46aa-a1e8-ad9e0eee24a4\"\n    }\n})\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10)  {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n\n    },\n\n    followUser(id){\n        return instance.post(`follow/${id}`)\n            .then(response => response.data)\n    },\n\n    unfollowUser(id){\n        return instance.delete(`follow/${id}`)\n            .then(response => response.data)\n    }\n\n}\n\nexport const authAPI = {\n    auth(){\n        return instance.get(`auth/me`,)\n            .then(response => response.data)\n    },\n    login(email, password, rememberMe){\n        return instance.post(`auth/login`,\n            {email, password, rememberMe})\n            .then(response => response.data)\n    },\n    logout(){\n        return instance.delete(`auth/login`,)\n            .then(response => response.data)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userID)  {\n        return instance.get(`profile/${userID}`,)\n            .then(response => response.data)\n    },\n    getStatus(userID) {\n        return instance.get(`profile/status/${userID}`,)\n            .then(response => response.data)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`,{ status: status })\n            .then(response => response.data)\n    }\n}\n\n","export const updateObjectInArray = (items, key, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === key){\n         return {...u, ...newObjProps}\n        }\n        return u\n    })\n}","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/ObjectHelper\";\n\nconst TOGGLE_SUB = \"users/TOGGLE-SUB\"\nconst SET_USERS = \"users/SET-USERS\"\nconst SET_CURRENT_PAGE = \"users/SET-CURRENT-PAGE\"\nconst SET_TOTAL_USERS_COUNT = \"users/SET-TOTAL-USERS-COUNT\"\nconst SET_PAGE_SIZE = \"users/SET-PAGE-SIZE\"\nconst TOGGLE_IS_FETCHING = \"users/TOGGLE-IS-FETCHING\"\nconst TOGGLE_FOLLOWING_PROGRESS = \"users/TOGGLE-FOLLOWING-PROGRESS\"\n\nexport const toggleSub = (id, isFollow) => ({type: TOGGLE_SUB, userId: id, isFollow: isFollow})\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (curP) => ({type: SET_CURRENT_PAGE, curP})\nexport const setTotalUsersCount = (totalC) => ({type: SET_TOTAL_USERS_COUNT, totalC})\nexport const setPageSize = (pageS) => ({type: SET_PAGE_SIZE, pageS})\n\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\n\n    dispatch(toggleIsFetching(true))\n\n    let data = await usersAPI.getUsers(currentPage, pageSize)\n\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalUsersCount(data.totalCount))\n\n\n}\n\nexport const followingStatusChange = (id, isFollow) => async (dispatch) => {\n\n    dispatch(toggleFollowingProgress(true, id))\n    let data = null\n    if (isFollow){\n        data = await usersAPI.followUser(id)\n    }else {\n        data = await usersAPI.unfollowUser(id)\n    }\n\n    if (data.resultCode === 0) {\n        dispatch(toggleSub(id, isFollow))\n        dispatch(toggleFollowingProgress(false, id))\n    }\n\n\n}\n\n\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingProgress: []\n};\n\nexport const UsersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case TOGGLE_SUB: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\",\n                    {followed: action.isFollow})\n            }\n        }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: [...action.users]\n\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.curP\n            }\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.totalC\n            }\n        }\n        case SET_PAGE_SIZE: {\n\n            return {\n                ...state,\n                pageSize: action.pageS\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_FOLLOWING_PROGRESS: {\n\n            return {\n                ...state,\n                followingProgress: action.isFetching\n                    ? [...state.followingProgress, action.userId]\n                    : state.followingProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n\n}\n\n\n\nexport default UsersReducer;","import {profileAPI, usersAPI} from \"../api/api\";\nimport {setTotalUsersCount, setUsers, toggleIsFetching} from \"./UsersReducer\";\n\nconst DELETE_POST = \"profile/DELETE-POST\"\nconst ADD_POST = \"profile/ADD-POST\"\nconst SET_USER_PROFILE = \"profile/SET-USER-PROFILE\"\nconst SET_PROFILE_PAGE_USER_ID = \"profile/SET-PROFILE-PAGE-USER-ID\"\nconst SET_STATUS = \"profile/SET-STATUS\"\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const addPostActionCreate = (text) => ({type: ADD_POST, text});\nexport const deletePost = (id) => ({type: DELETE_POST, id});\n\n\nexport const getProfile = (id) => async (dispatch) => {\n\n    let data = await profileAPI.getProfile(id)\n\n            dispatch(setUserProfile(data))\n\n\n}\n\nexport const getStatus = (id) => async (dispatch) => {\n\n    let data = await profileAPI.getStatus(id)\n\n            dispatch(setStatus(data))\n\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n\n    let data = await profileAPI.updateStatus(status)\n            if (data.resultCode === 0)\n            {\n                dispatch(setStatus(status))\n            }\n\n}\n\n\nlet initialState = {\n\n    postsData: [\n        {id: 0, message: 'thats ggg', likes: '8'},\n        {id: 1, message: 'thats was wp', likes: '4'},\n        {id: 2, message: 'thats was greeeeeeasLLLLL LLLL wp', likes: '844'},\n        {id: 3, message: 'wp brat', likes: '-1'},\n    ],\n    profile: null,\n    status: \"\"\n};\n\nexport const ProfileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                message: action.text,\n                likes: '0',\n                id: state.postsData.length\n            };\n            let stateCopy = {\n                ...state,\n                postsData: [...state.postsData, newPost]\n            };\n            return stateCopy;\n        }\n        case SET_USER_PROFILE: {\n\n            return {\n                ...state,\n                profile: action.profile\n\n            }\n        }\n        case SET_STATUS: {\n\n            return {\n                ...state,\n                status: action.status\n\n            }\n        }\n        case DELETE_POST: {\n\n            return {\n                ...state,\n                postsData: state.postsData.filter(p => p.id != action.id)\n            }\n        }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default ProfileReducer;","const ADD_MESSAGE = \"dialogs/ADD-MESSAGE\";\nconst UPDATE_NEW_MESSAGE_TEXT = \"dialogs/UPDATE-NEW-MESSAGE-TEXT\";\nconst CHANGE_ID = \"dialogs/CHANGE-ID\";\n\nexport const addMessageActionCreate = (text) => ({type: ADD_MESSAGE, text});\nexport const changeIdActionCreate = (id2) => ({type: CHANGE_ID, id: id2});\n\nlet initialState = {\n    messagesData: [\n        {\n            id: 0, messages: [\n                {text: 'hi', sender: 'user'},\n                {text: 'Hi', sender: 'friend'},\n                {text: 'How r u ?', sender: 'friend'},\n                {text: 'ok, bro', sender: 'user'},\n                {text: '. . .', sender: 'user'}]\n        },\n        {\n            id: 1, messages: [\n                {text: 'hi', sender: 'user'},\n                {text: 'Auuu', sender: 'user'},\n                {text: 'Wheere r u ?', sender: 'user'},\n                {text: '. . .', sender: 'user'}]\n        },\n        {\n            id: 2, messages: [\n                {text: 'Man', sender: 'frien'},\n                {text: 'U r &&&', sender: 'friend'},\n                {text: 'How r u ?', sender: 'friend'},\n                {text: 'maaaaaaaaa55n', sender: 'user'}]\n        },\n        {id: 3, messages: []},\n        {id: 4, messages: []},\n        {id: 5, messages: []},\n        {id: 6, messages: []}\n    ],\n    newMessageText: '',\n    newMessageId: '0',\n    dialogsData: [\n        {id: 0, name: 'check'},\n        {id: 1, name: 'Dimych'},\n        {id: 2, name: 'Vlad'},\n        {id: 3, name: 'Andr'},\n        {id: 4, name: 'Valent'},\n        {id: 5, name: 'Sant'},\n        {id: 6, name: 'Dash'}\n    ]\n}\n\nconst DialogsReducer = (state = initialState, action) => {\n\n    let stateCopy = {\n        ...state,\n        messagesData: [...state.messagesData]\n    };\n    stateCopy.messagesData = state.messagesData.map(m => {\n        let mcopy = {\n            ...m,\n            messages: [...m.messages]\n        };\n        return mcopy})\n\n\n    switch (action.type) {\n        case ADD_MESSAGE:\n            let newMess = {\n                text: action.text,\n                sender: 'user'\n            };\n            stateCopy.messagesData[stateCopy.newMessageId].messages.push(newMess);\n            return stateCopy;\n        case CHANGE_ID:\n            stateCopy.newMessageId = action.id;\n            return stateCopy;\n        default:\n            return state;\n    }\n\n\n    return state;\n}\n\nexport default DialogsReducer;","import {authAPI, usersAPI} from \"../api/api\";\nimport {toggleFollowingProgress, toggleSub} from \"./UsersReducer\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = \"auth/SET-USER-DARA\";\nconst DELETE_USER_DATA = \"auth/DELETE-USER-DATA\"\n\nexport const setAuthUserData = (data) => ({type: SET_USER_DATA, data})\nexport const deleteAuthUserData = () => ({type: DELETE_USER_DATA})\n\n\n\nexport const authUser = () => async (dispatch) => {\n\n    let data = await authAPI.auth()\n            if (data.resultCode === 0) {\n                dispatch(setAuthUserData(data.data))\n            }\n\n}\n\nexport const loginUser = (email, password, rememberMe) => async (dispatch) => {\n\n    let data = await authAPI.login(email, password, rememberMe)\n            if (data.resultCode === 0) {\n                dispatch(authUser())\n            }\n            else {\n                let err = data.messages.length > 0 ? data.messages[0] : \"Undefined error\"\n                dispatch(stopSubmit(\"login\", {_error: err}))\n            }\n}\n\nexport const logoutUser = () => async (dispatch) => {\n\n    let data = await authAPI.logout()\n            if (data.resultCode === 0) {\n                dispatch(deleteAuthUserData())\n            }\n}\n\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case SET_USER_DATA: {\n\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n\n            }\n        }\n        case DELETE_USER_DATA: {\n\n            return {\n                id: null,\n                email: null,\n                login: null,\n                isAuth: false\n            }\n        }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default AuthReducer;","import {authUser} from \"./AuthReducer\";\n\nconst SET_INITIALIZED = \"app/SET-INITIALIZED\"\n\nlet initialState = {\n    initializedSet: false\n};\n\nexport const setInitialized = () => ({type: SET_INITIALIZED})\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(authUser())\n    Promise.all([promise]).then(() => {\n        dispatch(setInitialized())\n    })\n\n}\n\n\nexport const AppReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case SET_INITIALIZED: {\n\n            return {\n                ...state,\n                initializedSet: true\n            }\n        }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default AppReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport ProfileReducer from \"./ProfileReducer\";\nimport DialogsReducer from \"./DialogsReducer\";\nimport UsersReducer from \"./UsersReducer\";\nimport AuthReducer from \"./AuthReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from \"redux-form\"\nimport AppReducer from \"./AppReducer\";\n\nlet reducersPack = combineReducers({\n    dialogsPage: DialogsReducer,\n    profilePage: ProfileReducer,\n    usersPage: UsersReducer,\n    auth: AuthReducer,\n    app: AppReducer,\n    form: formReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducersPack, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\nexport default store;","export default __webpack_public_path__ + \"static/media/header_pict_p_1.4b3e0fdb.jpg\";","import s from \"./Clocks.module.css\";\nimport {useEffect, useState} from \"react\";\n\n\n\nconst Clocks = () => {\n    let [time, setTime] = useState(new Date().toLocaleTimeString())\n\n    useEffect(() => {\n        let timer = setInterval(() => {\n            setTime(new Date().toLocaleTimeString())\n            //console.log(\"Clocks working\")\n        }, 1000)\n\n        return  () => {clearInterval(timer)\n            //console.log(\"CLOCKS UNMOUNT\")\n        }\n    }, [])\n    return <div className={s.clocks}>\n        It is {time}\n    </div>\n\n}\n\nexport default Clocks","import s from './Header.module.css';\nimport header_pict from '../../assets/images/header_pict_p_1.jpg'\nimport Clocks from \"./Clocks\";\n\n\nconst Header = () => {\n    return <header className = {s.header}>\n        <img src= {header_pict}></img>\n        <Clocks/>\n    </header>\n}\n\nexport default Header;","\n\nconst Music = (props) => {\n    return <div>\n        Music\n    </div>\n}\n\nexport default Music;","\n\nconst Settings = (props) => {\n    return <div>\n        Settings\n    </div>\n}\n\nexport default Settings;","import {useEffect} from \"react\";\n\n\nconst News = (props) => {\n    useEffect(()=>{\n        console.log(\"NEWS MOUNT\")\n        return ()=>{console.log(\"NEWS UNMOUNT\")}\n    })\n    return <div>\n        News\n    </div>\n}\n\nexport default News;","import s from './Message.module.css';\n\nconst Message = (props) => {\n\n    let sendBy = (props.data.sender === 'user') ? s.user : s.friend;\n\n    let sendByBorder = (props.data.sender === 'user') ? s.userBorder : s.friendBorder;\n\n    let sendByBorderAlign = (props.data.sender === 'user') ? s.userBorderAlign : s.friendBorderAlign;\n\n    return <div className={sendByBorderAlign}>\n        <div className={sendByBorder}>\n            <div className={sendBy}>\n                {props.data.text}\n            </div>\n        </div>\n    </div>\n}\n\n\nexport default Message;","import s from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {changeIdActionCreate} from \"../../../redux/DialogsReducer\";\n\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    let changeIdOnPage = () => {\n        props.changeId(props.id);\n    }\n    return <div className={s.dialog}>\n        <NavLink onClick={changeIdOnPage} to={path} activeClassName = {s.active}>{props.name}</NavLink>\n    </div>\n}\n\n\nexport default DialogItem;","import React from \"react\";\nimport s from \"./FormContent.module.css\"\n\nconst FormControl  = ({input, meta,...props}) => {\n    const hasError = meta.touched && meta.error\n    return <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n        <div>\n            {props.children}\n        </div>\n        {hasError && <span>{meta.error}</span>}\n    </div>\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl{...props}><input {...input} {...restProps}/></FormControl>\n}\n\n","export const requiredField = (value) => {\n    if (value) return undefined\n\n    return \"Field is required\"\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symb.`\n\n    return undefined\n}","import s from './Dialogs.module.css';\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { Redirect } from 'react-router';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsContent/FormsContent\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\n\n\nconst maxLength = maxLengthCreator(20)\n\nconst Messages = (props) => {\n\n    let userMessages = props.data.messages\n        .map(m => <Message data = {m}/>)\n\n    return (<div>\n        { userMessages }\n    </div>)\n}\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.page.dialogsData\n        .map(dialog => <DialogItem changeId = {props.changeId} id = {dialog.id} name ={dialog.name}/>)\n\n\n    let Router = props.page.dialogsData\n        .map(m => <Route path={'/dialogs/' + m.id}  render={() =>\n            <Messages\n                data = {props.page.messagesData[m.id]}/>}/>)\n\n    let addNewMessage = (formData) => {\n        props.addMessage(formData.newMessageBody)\n    }\n\n    return (\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    { dialogsElements }\n                </div>\n                <hr className={s.line1}></hr>\n                <div className={s.messages}>\n\n                    { Router }\n\n                </div>\n                <hr className={s.line2}></hr>\n                <ReduxAddMessageForm onSubmit = {addNewMessage}/>\n            </div>\n\n    )\n}\n\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit} className={s.addMessage}>\n        <div>\n            <Field component={Textarea} name = {\"newMessageBody\"}\n                   validate = {[requiredField, maxLength]}></Field>\n        </div>\n        <div >\n            <button>Send Message</button>\n        </div>\n    </form>\n}\n\nconst ReduxAddMessageForm = reduxForm({ form: \"addMessage\" })(AddMessageForm)\n\n\n\nexport default Dialogs;","import React from \"react\";\nimport { Redirect } from 'react-router';\nimport {connect} from \"react-redux\"\n\n\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth == false)\n                return <Redirect to={\"/login\"}/>\n            return <Component {...this.props}/>\n\n        }\n    }\n\n    let mapStateToPropsRedirect = (state) => {\n        return {\n            isAuth: state.auth.isAuth\n        }\n    }\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent\n}","import Dialogs from \"./Dialogs\";\nimport React from \"react\";\nimport {\n    addMessageActionCreate, changeIdActionCreate,\n    updateNewMessageTextActionCreate,\n} from \"../../redux/DialogsReducer\";\nimport {connect} from \"react-redux\";\nimport { Redirect } from 'react-router';\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        page: state.dialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n\n        addMessage: (text) => {dispatch(addMessageActionCreate(text));},\n        changeId: (id) => {dispatch(changeIdActionCreate(id));}\n    }\n}\n\n\n\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)","export default __webpack_public_path__ + \"static/media/default_avatar.5154a37d.jpg\";","import s from \"./User.module.css\";\nimport avatar from \"../../assets/images/default_avatar.jpg\";\nimport React from \"react\";\nimport 'antd/dist/antd.css';\nimport {NavLink} from \"react-router-dom\";\n\n\nlet User = ({u, followingProgress, followingStatusChange}) => {\n\n    return (<div>\n        <div key={u.id}>\n            <span>\n            <div>\n                <NavLink to = {'/profile/' + u.id}>\n                <img className={s.avatar}\n                       src={u.photos.small != null ? u.photos.small : avatar}/>\n                </NavLink>\n            </div>\n            <div>\n        {u.followed ? <button disabled={followingProgress.some(id => id === u.id)} onClick={() => {\n\n\n                followingStatusChange(u.id, false)\n\n\n            }}>Unfollow</button>\n            : <button disabled={followingProgress.some(id => id === u.id)}   onClick={() => {\n\n                followingStatusChange(u.id, true)\n\n\n            }}>Follow</button>}\n            </div>\n            </span>\n                    <span>\n            <span>\n            <div>{u.name}</div>\n            <div>{u.status}</div>\n            </span>\n            <span>\n            <div>{'u.location.city'}</div>\n            <div>{'u.location.country'}</div>\n            </span>\n            </span>\n                </div>\n    </div>\n)}\n\nexport default User","\nimport React from \"react\";\nimport {Pagination} from \"antd\";\nimport 'antd/dist/antd.css';\nimport { Redirect } from 'react-router';\nimport User from \"./User\";\n\nlet Users = (props) => {\n\n    if (props.isAuth == false)\n        return <Redirect to={\"/login\"}/>\n\n    return (<div>\n            <Pagination\n                defaultCurrent={props.currentPage}\n                defaultPageSize={props.pageSize}\n                total={props.totalUsersCount}\n                onShowSizeChange = {(current, pageSize) => {props.onPageSizeChange(current, pageSize)}}\n                onChange = {(page, pageSize) => {props.onPageChange(page, pageSize)}}\n            />\n        {props.users.map(\n            u => {\n                return (<User u = {u}\n                              followingProgress = {props.followingProgress}\n                              followingStatusChange = {props.followingStatusChange}\n                />)\n            }\n        )}\n    </div>\n)}\n\nexport default Users","export default __webpack_public_path__ + \"static/media/Spinner200px.a9a983d6.svg\";","import spinner from \"../../../assets/Spinner200px.svg\";\nimport React from \"react\";\n\n\nlet Preloader = (props) => {\n    return <div>\n        <img src = {spinner} />\n    </div>\n}\n\nexport default Preloader","import {createSelector} from \"reselect\";\n\nexport const getUsers = (state) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingProgress = (state) => {\n    return state.usersPage.followingProgress\n}\n\nexport const getUsersForTestReselect = createSelector(getUsers , getIsFetching, (users, isFetching) => {\n    if (isFetching)\n        return users.filter(u => false)\n    else\n        return users.filter(u => true)\n})\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport { Redirect } from 'react-router';\nimport {\n    follow,\n    requestUsers,\n    setCurrentPage, setPageSize, followingStatusChange,\n    toggleFollowingProgress,\n    toggleSub, unfollow,\n\n} from \"../../redux/UsersReducer\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {usersAPI} from \"../../api/api\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/UsersSelectors\";\n\n\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChange = (currentPage, pageSize) => {\n        this.props.setCurrentPage(currentPage)\n        this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageSizeChange = (currentPage, pageSize) => {\n        this.props.setPageSize(pageSize)\n        this.props.getUsers(currentPage, pageSize)\n    }\n\n    render() {\n\n\n        return <>\n            {this.props.isFetching ? <Preloader /> :\n            <Users\n            totalUsersCount = {this.props.totalUsersCount}\n            pageSize = {this.props.pageSize}\n            currentPage = {this.props.currentPage}\n            onPageChange = {this.onPageChange}\n            onPageSizeChange = {this.onPageSizeChange}\n            users = {this.props.users}\n            followingProgress = {this.props.followingProgress}\n            followingStatusChange = {this.props.followingStatusChange}\n\n        />}\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingProgress: getFollowingProgress(state),\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        setCurrentPage,\n        setPageSize,\n        getUsers: requestUsers,\n        followingStatusChange,\n\n    }),\n\n)(UsersContainer)","import s from './Post.module.css';\nimport avatar from '../../../../assets/images/default_avatar.jpg'\n\nconst Post = (props) => {\n    return <div className={s.item}>\n        <img className={s.postImage} src = {avatar}></img>\n        <div className={s.postMessage}>\n            {props.message}\n        </div>\n        <div className={s.like}>\n            <button className={s.likeButton}>Like it!</button>\n            <div className={s.likeText}>\n                like\n            </div>\n            <div className={s.likesCount}>\n                {props.likes}\n            </div>\n        </div>\n    </div>\n}\n\nexport default Post;","import s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsContent/FormsContent\";\n\nconst maxLength = maxLengthCreator(10)\n\nconst MyPosts = React.memo((props) => {\n\n    let postsElements = props.page.postsData\n        .map(p => <Post message={p.message} likes={p.likes}/>)\n\n\n    let addPost = (formData) => {\n        props.addPost(formData.newPostBody)\n    }\n\n    return <div className={s.myPostsContent}>\n        <h2>My posts</h2>\n        <ReduxAddPostForm className={s.item} onSubmit={addPost}/>\n        <div className={s.posts}>\n            {postsElements}\n        </div>\n    </div>\n})\n\n\nconst AddPostForm = (props) => {\n    return <form onSubmit={props.handleSubmit} className={s.item}>\n        <div>\n            <Field component={Textarea} name = {\"newPostBody\"}\n                   validate = {[requiredField, maxLength]}/>\n        </div>\n        <div>\n            <button className = {s.item}>Add post</button>\n        </div>\n    </form>\n}\n\nconst ReduxAddPostForm = reduxForm({ form: \"addPost\" })(AddPostForm)\n\n\n\n\nexport default MyPosts;","import React from \"react\";\nimport {addPostActionCreate, updateNewPostTextActionCreate} from \"../../../redux/ProfileReducer\";\n\nimport {connect} from \"react-redux\";\nimport MyPosts from \"./MyPosts\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        page: state.profilePage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (text) => {dispatch(addPostActionCreate(text))},\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","export default __webpack_public_path__ + \"static/media/head.396f570f.jpg\";","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) =>{\n\n        let [editMode, setEditMode] = useState(false)\n        let [status, setStatus] = useState(props.status)\n\n        useEffect(() => {\n            setStatus(props.status)\n        }, [props.status])\n\n        const activateEditMode = () => {\n                setEditMode(true)\n            }\n\n        const deactivateEditMode = () => {\n            setEditMode(false)\n            props.updateStatus(status)\n        }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n        return <div>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>\n                    {(props.status === null || props.status === \"\") ?\n                        <div>{\"Введите статус\"}</div> :\n                        <div>{props.status}</div>}\n                </span>\n            </div>}\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}></input>\n            </div>}\n        </div>\n\n}\n\nexport default ProfileStatusWithHooks","import React from \"react\";\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n\n\n    activateEditMode = () =>{\n        this.setState({\n            editMode: true\n        })\n    }\n\n    deactivateEditMode = () =>{\n        this.setState({\n            editMode: false\n        })\n        this.props.updateStatus(this.state.status)\n    }\n\n    onStatusChange = (e) =>{\n        this.setState({\n            status: e.currentTarget.value\n        })\n    }\n\n    render() {\n        return <div>\n            {!this.state.editMode &&\n            <div>\n                <span onDoubleClick={this.activateEditMode}>\n                    {(this.props.status === null || this.props.status === \"\") ?\n                        <div>{\"Введите статус\"}</div> :\n                        <div>{this.props.status}</div>}\n                </span>\n            </div>}\n            {this.state.editMode &&\n            <div>\n                <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}></input>\n            </div>}\n        </div>\n    }\n}\n\nexport default ProfileStatus","import s from './ProfileInfo.module.css';\nimport headPict from './head.jpg'\nimport avatar from \"../../../assets/images/default_avatar.jpg\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport React from \"react\";\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    let allContacts = []\n\n    for (let key in props.profile.contacts){\n        allContacts.push(<div>{key + ':' +props.profile.contacts[key]}</div>)\n    }\n\n    return <div className={s.profileInfo}>\n        <div>\n            <img className={s.header_picture} src={headPict}></img>\n        </div>\n        <div className={s.fullN}>\n            {props.profile.fullName}\n        </div>\n        <div>\n            <img className={s.ava} src={props.profile.photos.large != null ? props.profile.photos.large : avatar}/>\n        </div>\n        <div>\n            <ProfileStatusWithHooks\n                updateStatus = {props.updateStatus}\n                status ={props.status}/>\n            About me: {props.profile.aboutMe}\n        </div>\n        <div>\n            {props.profile.lookingForAJob ? ('Ищу работу: ' + props.profile.lookingForAJobDescription) : null}\n        </div>\n        <div>\n            Contacts:\n        </div>\n        <div>\n            {allContacts}\n        </div>\n    </div>\n\n}\n\nexport default ProfileInfo;","import s from './Profile.module.css';\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport React from \"react\";\n\nconst Profile = (props) => {\n    return <div className= {s.profile}>\n        <ProfileInfo\n            status = {props.status}\n            updateStatus = {props.updateStatus}\n            profile = {props.profile}/>\n        <MyPostsContainer/>\n    </div>\n}\n\nexport default Profile;","import Profile from \"./Profile\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {getProfile, getStatus, setUserProfile, updateStatus} from \"../../redux/ProfileReducer\";\nimport {withRouter} from \"react-router\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component{\n\n    componentDidMount() {\n        let userID = this.props.match.params.userid\n        if (!userID) {\n            if (this.props.isAuth){\n                userID = this.props.authUserId\n            }\n        }\n        if (this.props.isAuth) {\n            this.props.getProfile(userID)\n            this.props.getStatus(userID)\n        }\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userid !== prevProps.match.params.userid) {\n            let userID = this.props.match.params.userid\n            if (!userID) {\n                userID = this.props.authUserId\n            }\n\n            this.props.getProfile(userID)\n            this.props.getStatus(userID)\n        }\n        if (prevProps.status != this.props.status)\n        {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n\n\n    render () {\n\n        return (<Profile {...this.props}\n                         status = {this.props.status}\n                         updateStatus = {this.props.updateStatus}\n                         profile = {this.props.profile} />)\n\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    authUserId: state.auth.id,\n    isAuth: state.auth.isAuth,\n    status: state.profilePage.status\n})\n\nexport default compose(\n    connect(mapStateToProps, {\n        setUserProfile,\n        getProfile,\n        getStatus,\n        updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)","import s from './Sidebar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Sidebar = (props) => {\n    return <nav className= {s.nav}>\n        <div className = {s.item}>\n            <NavLink to='/profile' activeClassName = {s.active}>Profile</NavLink>\n        </div>\n        <div className = {s.item}>\n            <NavLink to='/dialogs' activeClassName = {s.active}>Messages</NavLink>\n        </div>\n        <div className = {s.item}>\n            <NavLink to='/users' activeClassName = {s.active}>Users</NavLink>\n        </div>\n        <div className = {s.item}>\n            <NavLink to='/news' activeClassName = {s.active}>News</NavLink>\n        </div>\n        <div className = {s.item}>\n            <NavLink to='/music' activeClassName = {s.active}>Music</NavLink>\n        </div>\n        <div className = {s.item}>\n            <NavLink to='/settings' activeClassName = {s.active}>Settings</NavLink>\n        </div>\n\n        <div className = {s.itemMarg + ' ' + s.item}>\n            {props.isAuth ? <NavLink  to = {'/profile/' + props.userId}>{props.login}</NavLink> : <NavLink to = '/login'>Login</NavLink>}\n        </div>\n        <div className = {s.item}>\n            {props.isAuth ? <a onClick = {props.logout}>Log out</a> : <div> </div>}\n        </div>\n    </nav>\n}\n\nexport default Sidebar;","import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Sidebar from \"./Sidebar\";\nimport {authUser, logoutUser, setAuthUserData} from \"../../redux/AuthReducer\";\nimport {setProfilePageUserId} from \"../../redux/ProfileReducer\";\nimport {authAPI} from \"../../api/api\";\nimport {compose} from \"redux\";\n\n\n\nclass SidebarContainer extends React.Component{\n\n    render () {\n        return (<Sidebar {...this.props} logout = {this.sendLogout}/>)\n\n    }\n\n    sendLogout = () => {\n        this.props.logoutUser()\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n    userId: state.auth.id\n})\n\n\nexport default compose(\n    connect(mapStateToProps, {authUser, logoutUser, setAuthUserData})\n)(SidebarContainer)","import {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsContent/FormsContent\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\nimport { Redirect } from 'react-router';\nimport s from \"./Login.module.css\"\n\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.sendLogin(formData)\n    }\n\n    if (props.isAuth) {\n\n        return <Redirect to = {\"/profile\"}/>\n    }\n\n    return <div>\n        <h2>Login</h2>\n        <ReduxLoginForm onSubmit = {onSubmit}/>\n    </div>\n\n}\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Input} name = {\"login\"} placeholder={\"Login\"}\n                       validate = {[requiredField]}/>\n            </div>\n            <div >\n                <Field component={Input} name = {\"password\"}  placeholder={\"Password\"} type = {\"password\"}\n                       validate = {[requiredField]}/>\n            </div>\n            <div className={s.formSummaryError}>\n                {error}\n            </div>\n            <div>\n                <div className={s.checkbox}><Field component={Input} name = {\"rememberMe\"}  type ={\"checkbox\"}/></div>\n                <div className={s.checkbox}> remember me</div>\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n\n}\n\nconst ReduxLoginForm = reduxForm({ form: \"login\" })(LoginForm)\n\nexport default Login;","import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {authUser, loginUser, logoutUser, setAuthUserData} from \"../../redux/AuthReducer\";\nimport {compose} from \"redux\";\nimport Login from \"./Login\";\n\n\n\nclass LoginContainer extends React.Component{\n\n    componentDidMount() {\n\n    }\n\n    render () {\n        return (<Login sendLogin = {this.sendLogin} {...this.props}/>)\n    }\n\n    sendLogin = (formData) => {\n        this.props.loginUser(formData.login, formData.password, formData.rememberMe)\n    }\n\n}\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\n\nexport default compose(\n    connect(mapStateToProps, {\n        loginUser,\n        logoutUser\n        })\n)(LoginContainer)","\nimport './App.css';\n\nimport Header from './components/Header/Header'\n\nimport Music from './components/Music/Music'\nimport Settings from './components/Settings/Settings'\nimport News from './components/News/News'\nimport DialogsContainer from './components/Dialogs/DialogsContainer'\nimport {HashRouter, BrowserRouter, Route} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport SidebarContainer from \"./components/Sidebar/SidebarContainer\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport {Component} from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/AppReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initializedSet) {\n            return<div>\n                <div>Please wait</div>\n                <Preloader/>\n            </div>\n        }\n        return (\n            <HashRouter basename = {process.env.PUBLIC_URL}>\n                <div className='app-wrap'>\n                    <SidebarContainer/>\n                    <Header/>\n                    <div className='app-wrap-content'>\n                        <Route path='/profile/:userid?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <LoginContainer/>}/>\n                    </div>\n                </div>\n            </HashRouter>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initializedSet: state.app.initializedSet\n})\n\nexport default compose(\n    connect(mapStateToProps, {initializeApp})\n)(App)\n\n\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/ReduxStore\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    ,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"likesCount\":\"Post_likesCount__R9C9-\",\"likeText\":\"Post_likeText__1ib6k\",\"likeButton\":\"Post_likeButton__iek-s\",\"postMessage\":\"Post_postMessage__2yT1f\",\"postImage\":\"Post_postImage__31InL\",\"like\":\"Post_like__oViQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"addMessage\":\"Dialogs_addMessage__1Bihp\",\"line1\":\"Dialogs_line1__1haXI\",\"line2\":\"Dialogs_line2__3qwc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBorderAlign\":\"Message_userBorderAlign__FpAz3\",\"friendBorderAlign\":\"Message_friendBorderAlign__2Ce3N\",\"userBorder\":\"Message_userBorder__2f80F\",\"friendBorder\":\"Message_friendBorder__2YbbU\",\"user\":\"Message_user__3sZQV\",\"friend\":\"Message_friend__1KmvT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsContent\":\"MyPosts_myPostsContent__2VPZl\",\"item\":\"MyPosts_item__R6Jlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"header_picture\":\"ProfileInfo_header_picture__3_he-\",\"ava\":\"ProfileInfo_ava__K96Gt\",\"fullN\":\"ProfileInfo_fullN__1QVRg\"};"],"sourceRoot":""}