{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength","maxLengthCreator","Dialogs","reduxForm","form","props","onSubmit","handleSubmit","className","s","addMessage","Field","component","Textarea","name","validate","requiredField","header","compose","connect","state","page","dialogsPage","dispatch","text","addMessageActionCreate","changeId","id","changeIdActionCreate","withAuthRedirect"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,0BAA0B,aAAe,8BAA8B,WAAa,4BAA4B,MAAQ,uBAAuB,MAAQ,yB,oBCAxPD,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,kBAAoB,mCAAmC,WAAa,4BAA4B,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,0B,oBCAxPD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,mJCUzDC,EAAYC,YAAiB,IAmEpBC,GAJaC,YAAU,CAAEC,KAAM,cAAlBD,EAZL,SAACE,GACpB,OAAO,uBAAMC,SAAUD,EAAME,aAAcC,UAAWC,IAAEC,WAAjD,UACH,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAQ,iBAC7BC,SAAY,CAACC,IAAehB,OAEvC,8BACI,0DA9CI,SAACK,GAEb,OAAO,8BACH,qBAAKG,UAAWC,IAAEQ,OAAlB,0B,yBCQOC,sBACXC,aArBkB,SAACC,GACnB,MAAO,CACHC,KAAMD,EAAME,gBAIK,SAACC,GACtB,MAAO,CAEHb,WAAY,SAACc,GAAUD,EAASE,YAAuBD,KACvDE,SAAU,SAACC,GAAQJ,EAASK,YAAqBD,SAYrDE,IAFWX,CAGbhB","file":"static/js/3.8511cbef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Dialogs_header__29-hP\",\"dialogs\":\"Dialogs_dialogs__1-V7R\",\"messages\":\"Dialogs_messages__K_gvD\",\"dialogsItems\":\"Dialogs_dialogsItems__hxAiY\",\"addMessage\":\"Dialogs_addMessage__2Bf9N\",\"line1\":\"Dialogs_line1__3vR8m\",\"line2\":\"Dialogs_line2__3w4Ev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBorderAlign\":\"Message_userBorderAlign__9u3fd\",\"friendBorderAlign\":\"Message_friendBorderAlign__3wUW4\",\"userBorder\":\"Message_userBorder__1b9GQ\",\"friendBorder\":\"Message_friendBorder__gO3YU\",\"user\":\"Message_user__25g3t\",\"friend\":\"Message_friend__3xY_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__c29n9\",\"active\":\"DialogItem_active__3GNh1\"};","import s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Redirect } from 'react-router';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsContent/FormsContent\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(20)\r\n\r\nconst Messages = (props) => {\r\n\r\n    let userMessages = props.data.messages\r\n        .map(m => <Message data = {m}/>)\r\n\r\n    return (<div>\r\n        { userMessages }\r\n    </div>)\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return <div>\r\n        <div className={s.header}>\r\n            Messages\r\n        </div>\r\n    </div>\r\n//  todo\r\n    let dialogsElements = props.page.dialogsData\r\n        .map(dialog => <DialogItem changeId = {props.changeId} id = {dialog.id} name ={dialog.name}/>)\r\n\r\n\r\n    let Router = props.page.dialogsData\r\n        .map(m => <Route path={'/dialogs/' + m.id}  render={() =>\r\n            <Messages\r\n                data = {props.page.messagesData[m.id]}/>}/>)\r\n\r\n    let addNewMessage = (formData) => {\r\n        props.addMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    { dialogsElements }\r\n                </div>\r\n                <hr className={s.line1}></hr>\r\n                <div className={s.messages}>\r\n\r\n                    { Router }\r\n\r\n                </div>\r\n                <hr className={s.line2}></hr>\r\n                <ReduxAddMessageForm onSubmit = {addNewMessage}/>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit} className={s.addMessage}>\r\n        <div>\r\n            <Field component={Textarea} name = {\"newMessageBody\"}\r\n                   validate = {[requiredField, maxLength]}></Field>\r\n        </div>\r\n        <div >\r\n            <button>Send Message</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ReduxAddMessageForm = reduxForm({ form: \"addMessage\" })(AddMessageForm)\r\n\r\n\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport React from \"react\";\r\nimport {\r\n    addMessageActionCreate, changeIdActionCreate,\r\n    updateNewMessageTextActionCreate,\r\n} from \"../../redux/DialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport { Redirect } from 'react-router';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        page: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addMessage: (text) => {dispatch(addMessageActionCreate(text));},\r\n        changeId: (id) => {dispatch(changeIdActionCreate(id));}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}