{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength","maxLengthCreator","Dialogs","reduxForm","form","props","onSubmit","handleSubmit","className","s","addMessage","Field","component","Textarea","name","validate","requiredField","header","compose","connect","state","page","dialogsPage","dispatch","text","addMessageActionCreate","changeId","id","changeIdActionCreate","withAuthRedirect"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,0BAA0B,aAAe,8BAA8B,WAAa,4BAA4B,MAAQ,uBAAuB,MAAQ,yB,oBCAxPD,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,kBAAoB,mCAAmC,WAAa,4BAA4B,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,0B,oBCAxPD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,mJCUzDC,EAAYC,YAAiB,IAmEpBC,GAJaC,YAAU,CAAEC,KAAM,cAAlBD,EAZL,SAACE,GACpB,OAAO,uBAAMC,SAAUD,EAAME,aAAcC,UAAWC,IAAEC,WAAjD,UACH,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAQ,iBAC7BC,SAAY,CAACC,IAAehB,OAEvC,8BACI,0DA9CI,SAACK,GAEb,OAAO,8BACH,qBAAKG,UAAWC,IAAEQ,OAAlB,0B,wBCQOC,sBACXC,aArBkB,SAACC,GACnB,MAAO,CACHC,KAAMD,EAAME,gBAIK,SAACC,GACtB,MAAO,CAEHb,WAAY,SAACc,GAAUD,EAASE,YAAuBD,KACvDE,SAAU,SAACC,GAAQJ,EAASK,YAAqBD,SAYrDE,IAFWX,CAGbhB","file":"static/js/3.6f764a69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Dialogs_header__2JBc2\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"addMessage\":\"Dialogs_addMessage__1Bihp\",\"line1\":\"Dialogs_line1__1haXI\",\"line2\":\"Dialogs_line2__3qwc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBorderAlign\":\"Message_userBorderAlign__FpAz3\",\"friendBorderAlign\":\"Message_friendBorderAlign__2Ce3N\",\"userBorder\":\"Message_userBorder__2f80F\",\"friendBorder\":\"Message_friendBorder__2YbbU\",\"user\":\"Message_user__3sZQV\",\"friend\":\"Message_friend__1KmvT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\"};","import s from './Dialogs.module.css';\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { Redirect } from 'react-router';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsContent/FormsContent\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\n\n\nconst maxLength = maxLengthCreator(20)\n\nconst Messages = (props) => {\n\n    let userMessages = props.data.messages\n        .map(m => <Message data = {m}/>)\n\n    return (<div>\n        { userMessages }\n    </div>)\n}\n\nconst Dialogs = (props) => {\n\n    return <div>\n        <div className={s.header}>\n            Messages\n        </div>\n    </div>\n//  todo\n    let dialogsElements = props.page.dialogsData\n        .map(dialog => <DialogItem changeId = {props.changeId} id = {dialog.id} name ={dialog.name}/>)\n\n\n    let Router = props.page.dialogsData\n        .map(m => <Route path={'/dialogs/' + m.id}  render={() =>\n            <Messages\n                data = {props.page.messagesData[m.id]}/>}/>)\n\n    let addNewMessage = (formData) => {\n        props.addMessage(formData.newMessageBody)\n    }\n\n    return (\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    { dialogsElements }\n                </div>\n                <hr className={s.line1}></hr>\n                <div className={s.messages}>\n\n                    { Router }\n\n                </div>\n                <hr className={s.line2}></hr>\n                <ReduxAddMessageForm onSubmit = {addNewMessage}/>\n            </div>\n\n    )\n}\n\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit} className={s.addMessage}>\n        <div>\n            <Field component={Textarea} name = {\"newMessageBody\"}\n                   validate = {[requiredField, maxLength]}></Field>\n        </div>\n        <div >\n            <button>Send Message</button>\n        </div>\n    </form>\n}\n\nconst ReduxAddMessageForm = reduxForm({ form: \"addMessage\" })(AddMessageForm)\n\n\n\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\nimport React from \"react\";\nimport {\n    addMessageActionCreate, changeIdActionCreate,\n    updateNewMessageTextActionCreate,\n} from \"../../redux/DialogsReducer\";\nimport {connect} from \"react-redux\";\nimport { Redirect } from 'react-router';\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        page: state.dialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n\n        addMessage: (text) => {dispatch(addMessageActionCreate(text));},\n        changeId: (id) => {dispatch(changeIdActionCreate(id));}\n    }\n}\n\n\n\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)"],"sourceRoot":""}